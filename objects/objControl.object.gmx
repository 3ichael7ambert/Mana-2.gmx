<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>-1</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///INIT

HeyZap_Publisher_ID = "f2d4c9ac4bbb805b9070b997fb0597c4";
// paste your Heyzap publiher ID

HeyZap_Mode = 1;
// 0 - normal mode (auto fetch enabled)
// 1 - test mode
// 2 - normal mode (auto fetch disabled)

HeyZap_Init(HeyZap_Publisher_ID,HeyZap_Mode);

if (os_type == os_ios) {
    GMPauseBugFixer = 1;
// You should use bug fixer for iOS in Game Maker Studio v1.4.1763
// 1 - switch on bug fixer
// 0 - switch off bug fixer
// You can find more info about this bug in HeyZap Extension documentation
} else {
    GMPauseBugFixer = 0;
}

/*
OFFER WALL NOTES:
If you plan to use Offer Wall please read comment in alarm[11] event.
This code will check Offer Wall server for a reward first time after HeyZap initialization 
if (offer_wall_was_opened_before == true) {
    alarm[11] = 10*fps;
}
Next method will close Offer Wall after player select offer
HeyZap_OfferWallAutoClose(true); 
*/


global.coins = 0;
global.banner_width = 0;
global.banner_height = 0;
global.ad_loaded = 0;
global.reward_loaded = 0;

draw_set_halign(fa_center);
draw_set_valign(fa_middle);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///OFFER WALL REWARD CHECKER
//HeyZap_OfferWallCheckReward();

// NOTE: After player visited offer wall first time
// you will need to call the HeyZap_OfferWallCheckReward()
// method periodically to check for validated offers. Offers
// are validated server-side and can take any amount of time,
// depending on the offer.
// Also you should save this status and check server for a
// reward regularly after next launch of the game.
// For exmple every 20 seconds
//alarm[11] = 20*fps;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///GM BUG FIXER CODE for GMS v1.4.1763
if (GMPauseBugFixer &gt; 0) {
    if (os_is_paused()) {
        GMPauseBugFixer = 5;
    } else {
        if (GMPauseBugFixer &gt; 1) {
            GMPauseBugFixer -= 1;
            if (GMPauseBugFixer == 1) {
                HeyZap_GMBugFix();
            }
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="70">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///CALLBACKS
show_debug_message("GM Social Async Event...");

var type = string(ds_map_find_value(async_load, "type"));
var value = ds_map_find_value(async_load, "value");

// REWARDS CATCHERS
if (type == "heyzap_reward") {
    //HeyZap_Get_Reward(value); //AD REWARD SHOULD BE CONFIGURED HERE
} else if (type == "heyzap_offer_reward") {
    //HeyZap_Offer_Get_Reward(value); //OFFER WALL REWARD SHOULD BE CONFIGURED HERE
}

// OFFER WALL REWARDS CHECKERS
if (type == "heyzap_offer_loaded") {
    //HeyZap_Offer_Loaded(value); // USED FOR STARTING OFFER WALL REWARD CHECKER on Android
} else if (type == "heyzap_offer_closed") {
    // ! iOS callback only !
    //HeyZap_Offer_Closed(); //USED FOR STARTING OFFER WALL REWARD CHECKER on iOS
}

// OTHER CALLBACKS
if (type == "heyzap_ad_loaded") {
    HeyZap_Ad_Loaded(value);
} else if (type == "heyzap_ad_shown") {
    HeyZap_Ad_Shown(value);
} else if (type == "heyzap_ad_hidden") {
    HeyZap_Ad_Hidden();
} else if (type == "heyzap_ad_clicked") {
    HeyZap_Ad_Clicked();
} else if (type == "heyzap_reward_loaded") {
    //HeyZap_Reward_Loaded(value);
} else if (type == "heyzap_reward_shown") {
    //HeyZap_Reward_Shown(value);
} else if (type == "heyzap_reward_hidden") {
    //HeyZap_Reward_Hidden();
} else if (type == "heyzap_reward_clicked") {
    //HeyZap_Reward_Clicked();
} else if (type == "heyzap_banner_loaded") {
    //HeyZap_Banner_Loaded(value);
} else if (type == "heyzap_banner_clicked") {
    //HeyZap_Banner_Clicked();
} else if (type == "heyzap_offer_reward_error") {
    //HeyZap_Offer_Reward_Error();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
draw_set_color(c_black);
draw_text(x+320,y+30,'Note: "Video functions" have been removed in SDK 10.#Please use the "Interstitial functions"');

draw_set_color(c_white);
draw_text(room_width/2, objLoadReward.y+180, "Banner Size: "+string(global.banner_width)+"x"+string(global.banner_height));

draw_set_color(c_yellow);
draw_text(room_width/2, objLoadReward.y+75, "COINS:");
draw_text_transformed(room_width/2, objLoadReward.y+95, string(global.coins),1.5,1.5,0);

// Interstitials Status
if (global.ad_loaded) {
    draw_set_color(c_green);
    draw_text(room_width/2, objLoadInterstitial.y+15, "Interstitial#LOADED!");
} else {
    draw_set_color(c_red);
    draw_text(room_width/2, objLoadInterstitial.y+15, "Interstitial#NOT READY");
}

// Reward Video Status
if (global.reward_loaded) {
    draw_set_color(c_green);
    draw_text(room_width/2, objLoadReward.y+15, "Reward Video#LOADED");
} else {
    draw_set_color(c_red);
    draw_text(room_width/2, objLoadReward.y+15, "Reward Video#NOT READY!");
}
*/
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="8">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>game_end();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
