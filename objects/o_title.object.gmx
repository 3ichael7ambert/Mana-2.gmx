<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_block</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-101</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>// M
m1x1=room_width*0.2;
m1y1=room_height/3;

// A
a1x1=room_width*0.4;
a1y1=room_height/3;

//N

n1x1=room_width*0.6;
n1y1=room_height/3;
//A
a2x1=room_width*0.8;
a2y1=room_height/3;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>distM=distance_to_point(mouse_x,mouse_y);
my=room_height/2-mouse_y;
mx=room_width/2-mouse_x;
my2=abs(mouse_y-y);
mx2=abs(mouse_x-x);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_alpha(1);

//Transparent
if point_distance(mouse_x,mouse_y,room_width/2,room_height/2) &lt;200
{ draw_set_alpha(1-point_distance(mouse_x,mouse_y,room_width/2,room_height/2)/200);}
else { draw_set_alpha(0); }


//Back COLOR1
draw_set_color(c_black);
// M
draw_rectangle(m1x1-50,m1y1-50,m1x1-25,m1y1+50,false);
draw_rectangle(m1x1+25,m1y1-50,m1x1+50,m1y1+50,false);

draw_line_width(m1x1-50,m1y1-50,m1x1,m1y1,10);

draw_line_width(m1x1,m1y1,m1x1+50,m1y1-50,10);

//A
draw_line_width(a1x1-50,a1y1+50,a1x1,a1y1-50,10);
draw_line_width(a1x1,a1y1-50,a1x1+50,a1y1+50,10);

draw_rectangle(a1x1-25,a1y1-13,a1x1+25,a1y1+12,false);

//N

draw_rectangle(n1x1-50,n1y1-50,n1x1-25,n1y1+50,false);
draw_rectangle(n1x1+25,n1y1-50,n1x1+50,n1y1+50,false);

draw_line_width(n1x1-50,n1y1-50,n1x1+50,n1y1+50,10);

//A2

//A
draw_line_width(a2x1-50,a2y1+50,a2x1,a2y1-50,10);
draw_line_width(a2x1,a2y1-50,a2x1+50,a2y1+50,10);

draw_rectangle(a2x1-25,a2y1-13,a2x1+25,a2y1+12,false);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*draw_set_alpha(1);
//Back COLOR1
draw_set_color(c_black);
// M
draw_set_color(color1);
draw_rectangle(m1x1-50,m1y1-50,m1x1-25,m1y1+50,false);
draw_rectangle(m1x1+25,m1y1-50,m1x1+50,m1y1+50,false);

draw_set_color(color2);
draw_line_width(m1x1-50,m1y1-50,m1x1,m1y1,10);

draw_set_color(color3);
draw_line_width(m1x1,m1y1,m1x1+50,m1y1-50,10);

//A
draw_set_color(color1);
draw_line_width(a1x1-50,a1y1+50,a1x1,a1y1-50,10);

draw_set_color(color3);
draw_line_width(a1x1,a1y1-50,a1x1+50,a1y1+50,10);

draw_set_color(color2);
draw_rectangle(a1x1-25,a1y1-13,a1x1+25,a1y1+12,false);

//N
draw_set_color(color1);
draw_rectangle(n1x1-50,n1y1-50,n1x1-25,n1y1+50,false);

draw_set_color(color2);
draw_rectangle(n1x1+25,n1y1-50,n1x1+50,n1y1+50,false);
draw_set_color(color3);
draw_line_width(n1x1-50,n1y1-50,n1x1+50,n1y1+50,10);

//A2

//A
draw_set_color(color2);
draw_line_width(a2x1-50,a2y1+50,a2x1,a2y1-50,10);
draw_set_color(color1);
draw_line_width(a2x1,a2y1-50,a2x1+50,a2y1+50,10);
draw_set_color(color3);
draw_rectangle(a2x1-25,a2y1-13,a2x1+25,a2y1+12,false);
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if point_distance(mouse_x,mouse_y,room_width/2,room_height/2) &lt;200
{ draw_set_alpha(1-point_distance(mouse_x,mouse_y,room_width/2,room_height/2)/200);}
else { draw_set_alpha(0); }

//Back COLOR1
draw_set_color(c_black);
// M
draw_set_color(color1);
draw_rectangle(m1x1+mx-50,m1y1-50,m1x1+mx-25,m1y1+my+50,false);
draw_rectangle(m1x1-mx+25,m1y1-50,m1x1-mx+50,m1y1+my+50,false);

draw_set_color(color2);
draw_line_width(m1x1+mx-50,m1y1-50,m1x1,m1y1,10);

draw_set_color(color3);
draw_line_width(m1x1,m1y1,m1x1-mx+50,m1y1-50,10);

//A
draw_set_color(color1);
draw_line_width(a1x1+mx-50,a1y1+my+50,a1x1,a1y1-50,10);

draw_set_color(color3);
draw_line_width(a1x1,a1y1-50,a1x1-mx+50,a1y1+my+50,10);

draw_set_color(color2);
draw_rectangle(a1x1+mx-25,a1y1-13,a1x1-mx+25,a1y1+12,false);

//N
draw_set_color(color1);
draw_rectangle(n1x1+mx-50,n1y1-50,n1x1+mx-25,n1y1+my+50,false);

draw_set_color(color2);
draw_rectangle(n1x1-mx+25,n1y1-50,n1x1-mx+50,n1y1+my+50,false);
draw_set_color(color3);
draw_line_width(n1x1+mx-50,n1y1-50,n1x1-mx+50,n1y1+my+50,10);

//A2

//A
draw_set_color(color2);
draw_line_width(a2x1+mx-50,a2y1+my+50,a2x1,a2y1-50,10);
draw_set_color(color1);
draw_line_width(a2x1,a2y1-50,a2x1-mx+50,a2y1+my+50,10);
draw_set_color(color3);
draw_rectangle(a2x1+mx-25,a2y1-13,a2x1-mx+25,a2y1+12,false);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
